@model Models.Order

@{
    ViewData["Title"] = "Create";
}

<h1>Order</h1>
@{
    byte[] customer;
    Context.Session.TryGetValue("Customer", out customer);
    <h1>@System.Text.Encoding.UTF8.GetString(customer)</h1>
    byte[] location;
    Context.Session.TryGetValue("Location", out location);
    <h1>@System.Text.Encoding.UTF8.GetString(location)</h1>
}



<hr />
<div class="form-group row d-flex justify-content-center text-center">
    <form asp-action="AddLineItem" method="post">
        <h4>What would you like to order?</h4>
        <select class="form-select form-select-lg" name="Product">
            <option selected>Plain Krabby Patty</option>
            <option>Krabby Patty</option>
            <option>Deluxe Krabby Patty</option>
        </select>
        <select class="form-select form-select-lg" name="Quantity">
            <option selected>1</option>
            <option>2</option>
            <option>3</option>
        </select>
        <input class="btn btn-outline-secondary btn-sm" type="submit" name="response" value="Add to order" />
    </form>
</div>
@*<div class="form-group row d-flex justify-content-center text-center">
    <p>Current order view with total at the bottom</p>
</div>*@
<div class="form-group row d-flex justify-content-center text-center">
    <a class="mt-3 btn btn-primary" asp-controller="Home" asp-action="Index">Place Order</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
